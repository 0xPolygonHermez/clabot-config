name: Auto Update CLA Contributors

on:
  issue_comment:
    types: [created]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      username:
        description: 'GitHub username to add to CLA'
        required: true
        type: string

jobs:
  check-cla:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    outputs:
      cla-signed: ${{ steps.check.outputs.signed }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Check CLA status
      id: check
      run: |
        AUTHOR="${{ github.event.pull_request.user.login }}"
        if jq -e --arg user "$AUTHOR" '.contributors | index($user)' .clabot > /dev/null; then
          echo "signed=true" >> $GITHUB_OUTPUT
          echo "✅ CLA already signed by $AUTHOR"
        else
          echo "signed=false" >> $GITHUB_OUTPUT
          echo "❌ CLA not signed by $AUTHOR"
        fi
        
    - name: Add CLA required label
      if: steps.check.outputs.signed == 'false'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.addLabels({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: ['cla-required']
          });
          
    - name: Add CLA signed label
      if: steps.check.outputs.signed == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.addLabels({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: ['cla-signed']
          });
          
    - name: Comment CLA instructions
      if: steps.check.outputs.signed == 'false'
      uses: actions/github-script@v7
      with:
        script: |
          const message = `
          ## 📋 Contributor License Agreement Required
          
          Hi @${{ github.event.pull_request.user.login }}! Thank you for your contribution.
          
          Before we can merge your pull request, we need you to sign our Contributor License Agreement (CLA).
          
          ### How to sign the CLA:
          
          1. 📄 **Read the CLA**: [Individual CLA Document](https://github.com/0xPolygonHermez/clabot-config/blob/master/CLA%20Zisk.pdf)
          2. 💬 **Accept digitally**: Comment on this PR with **exactly** this text:
          
          \`\`\`
          I have read and agree to the CLA
          \`\`\`
          
          ⚠️ **Important**: The comment must contain exactly the text above, with no additional words or modifications.
          
          Once you comment with the exact phrase, our bot will automatically register your acceptance and remove this requirement.
          
          Thank you for your understanding! 🙏
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: message
          });

  update-cla:
    if: |
      (github.event_name == 'issue_comment' && 
       github.event.issue.pull_request) ||
      github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        ref: ${{ github.head_ref }}
        
    - name: Install jq
      run: sudo apt-get install jq
      
    - name: Validate CLA comment (strict check)
      if: github.event_name == 'issue_comment'
      id: validate_comment
      run: |
        COMMENT_BODY="${{ github.event.comment.body }}"
        # Remove leading/trailing whitespace and normalize
        TRIMMED_COMMENT=$(echo "$COMMENT_BODY" | xargs)
        EXPECTED_PHRASE="I have read and agree to the CLA"
        
        echo "Comment received: '$TRIMMED_COMMENT'"
        echo "Expected phrase: '$EXPECTED_PHRASE'"
        
        # Strict comparison - must match exactly
        if [ "$TRIMMED_COMMENT" = "$EXPECTED_PHRASE" ]; then
          echo "✅ Valid CLA acceptance comment detected"
          echo "valid=true" >> $GITHUB_OUTPUT
        else
          echo "❌ Invalid CLA comment format"
          echo "The comment must contain EXACTLY: '$EXPECTED_PHRASE'"
          echo "valid=false" >> $GITHUB_OUTPUT
        fi
      
    - name: Respond to invalid CLA comment
      if: github.event_name == 'issue_comment' && steps.validate_comment.outputs.valid == 'false'
      uses: actions/github-script@v7
      with:
        script: |
          const { owner, repo } = context.repo;
          const issue_number = context.issue.number;
          
          const errorMessage = [
            '❌ **Invalid CLA Comment Format**',
            '',
            `@${{ github.event.comment.user.login }}, your comment does not match the required format.`,
            '',
            '**Required comment (exact text):**',
            '```',
            'I have read and agree to the CLA',
            '```',
            '',
            'Please comment again with exactly the text above (no additional text or modifications).',
            '',
            '⚠️ **Security Note**: For legal compliance, we require the exact phrase without any modifications or additional text.'
          ].join('\n');
          
          await github.rest.issues.createComment({
            owner,
            repo,
            issue_number,
            body: errorMessage
          });
          
    - name: Stop workflow if comment is invalid
      if: github.event_name == 'issue_comment' && steps.validate_comment.outputs.valid == 'false'
      run: |
        echo "❌ Stopping workflow due to invalid CLA comment format"
        exit 1
      
    - name: Determine contributor
      if: github.event_name == 'workflow_dispatch' || (github.event_name == 'issue_comment' && steps.validate_comment.outputs.valid == 'true')
      id: contributor
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          CONTRIBUTOR="${{ github.event.inputs.username }}"
        else
          CONTRIBUTOR="${{ github.event.comment.user.login }}"
        fi
        echo "username=$CONTRIBUTOR" >> $GITHUB_OUTPUT
        echo "Processing CLA for user: $CONTRIBUTOR"
      
    - name: Get contributor information
      if: github.event_name == 'workflow_dispatch' || (github.event_name == 'issue_comment' && steps.validate_comment.outputs.valid == 'true')
      id: user_info
      run: |
        CONTRIBUTOR="${{ steps.contributor.outputs.username }}"
        
        # Get minimal user information from GitHub API
        USER_DATA=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/users/$CONTRIBUTOR")
        
        USER_ID=$(echo "$USER_DATA" | jq -r '.id')
        
        echo "user_id=$USER_ID" >> $GITHUB_OUTPUT
        echo "Retrieved info for $CONTRIBUTOR (ID: $USER_ID)"
    
    - name: Add contributor to CLA with simple record
      if: github.event_name == 'workflow_dispatch' || (github.event_name == 'issue_comment' && steps.validate_comment.outputs.valid == 'true')
      run: |
        CONTRIBUTOR="${{ steps.contributor.outputs.username }}"
        
        # Check if contributor already exists
        if jq -e --arg user "$CONTRIBUTOR" '.contributors | index($user)' .clabot > /dev/null; then
          echo "Contributor $CONTRIBUTOR already in CLA list"
          exit 0
        fi
        
        # Add contributor to the list and sort
        jq --arg user "$CONTRIBUTOR" '.contributors += [$user] | .contributors |= sort' .clabot > .clabot.tmp
        mv .clabot.tmp .clabot
        
        echo "Added $CONTRIBUTOR to CLA contributors list"
        
    - name: Commit and push changes
      if: github.event_name == 'workflow_dispatch' || (github.event_name == 'issue_comment' && steps.validate_comment.outputs.valid == 'true')
      run: |
        git config --local user.email "noreply@github.com"
        git config --local user.name "CLA Bot"
        git add .clabot
        
        if git diff --staged --quiet; then
          echo "No changes to commit"
          exit 0
        fi
        
        git commit -m "Add ${{ steps.contributor.outputs.username }} to CLA contributors

        CLA accepted via GitHub comment on PR #${{ github.event.issue.number || 'manual' }}
        Timestamp: $(date -u)
        GitHub User ID: ${{ steps.user_info.outputs.user_id }}"
        
        git push
        
    - name: Update PR labels and comment
      if: github.event_name == 'issue_comment' && steps.validate_comment.outputs.valid == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          const { owner, repo } = context.repo;
          const issue_number = context.issue.number;
          
          // Remove cla-required label and add cla-signed
          try {
            await github.rest.issues.removeLabel({
              owner,
              repo,
              issue_number,
              name: 'cla-required'
            });
          } catch (error) {
            console.log('cla-required label not found, skipping removal');
          }
          
          await github.rest.issues.addLabels({
            owner,
            repo,
            issue_number,
            labels: ['cla-signed']
          });
          
          // Add success comment
          const successMessage = [
            '✅ **CLA Accepted!**',
            '',
            'Thank you @${{ steps.contributor.outputs.username }}! Your CLA acceptance has been registered via your GitHub account.',
            '',
            '🔗 **Verification**: This acceptance is permanently recorded in our git history',
            '📅 **Timestamp**: ' + new Date().toISOString(),
            '',
            'Your pull request can now proceed with the review process. 🚀'
          ].join('\n');
          
          await github.rest.issues.createComment({
            owner,
            repo,
            issue_number,
            body: successMessage
          });
          
    - name: Notify completion
      if: github.event_name == 'workflow_dispatch'
      run: |
        echo "✅ User ${{ steps.contributor.outputs.username }} has been manually added to CLA contributors"
